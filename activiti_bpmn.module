<?php


function activiti_bpmn_admin() {
  $form = array();

  $form['activiti_bpmn_desc'] = array(
    '#type' => 'textarea',
    '#title' => t('Notes about your system'),
    '#default_value' => variable_get('activiti_bpmn_desc', ''),
    '#size' => 200,
    '#maxlength' => 20000,
    '#description' => t("Describe the things that the next developer needs to know to get up and running quickly"),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function activiti_bpmn_menu() {

  $items = array();

  $items['admin/config/activiti_bpmn'] = array(
    'title' => 'Developer Documentation',
    'description' => 'This page is where you centralize your Drupal system documentation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('activiti_bpmn_admin'),
    'access arguments' => array('administer developer_docs settings'),
    'type' => MENU_NORMAL_ITEM,
   );

  return $items;
}


function activiti_bpmn_permission() {
  
  $permissions['create activiti bpmn nodes'] = array(
    'title' => t('Create activiti bpmn nodes'),
    'description' => t('Allow users to create simple content type nodes'),
  );
  $permissions['view activiti bpmn nodes'] = array(
    'title' => t('View activiti bpmn nodes'),
    'description' => t('Allow users to view activiti bpmn nodes'),
  );
  $permissions['edit activiti bpmn nodes'] = array(
    'title' => t('Edit activiti bpmn nodes'),
    'description' => t('Allow users to edit activiti bpmn nodes'),
  );
  $permissions['delete activiti bpmn nodes'] = array(
    'title' => t('Delete activiti bpmn nodes'),
    'description' => t('Allow users to delete activiti bpmn nodes'),
  );
  
  return $permissions;
}

function activiti_bpmn_node_access($node, $op, $account) {
  // just in case the $node parameter is not really a node object or
  // the $node->type is one other than our own
  $type = is_string($node) ? $node : $node->type;
  if (! is_object($node) || $type != 'node_activiti') {
    return NODE_ACCESS_IGNORE;
  }
  switch ($op)  {
    case 'create':
      if (user_access('create activiti bpmn nodes', $account))  {
        return NODE_ACCESS_ALLOW;
      }
      break;
    case 'update':
      if (user_access('edit activiti bpmn nodes', $account))  {
        return NODE_ACCESS_ALLOW;
      }
      break;
    case 'delete':
      if (user_access('delete activiti bpmn nodes', $account))  {
        return NODE_ACCESS_ALLOW;
      }
      break;
    case 'view':
      if (user_access('view activiti bpmn nodes', $account))  {
        return NODE_ACCESS_ALLOW;
      }
      break;
  }
  // if none of the conditions above are met we will deny access
  return NODE_ACCESS_DENY;
}


//function activiti_bpmn_node_insert($node) {
///if($node->type == "node_activiti"){
//krumo($node);
//$filepath = drupal_realpath($node->activiti_diagramfile['und'][0]['uri']);
//$file_contents = file_get_contents($filepath);

//  drupal_set_message(t($file_contents), 'warning');

///}
  
//}


function activiti_bpmn_form_alter(&$form, &$form_state, $form_id) {

  if($form_id == "node_activiti_node_form") {
  
 // dsm($form);  // pretty print array using Krumo to messages


    $form['#submit'][] = 'activiti_bpmn_submission_function';

 //dsm($form);
  }

}


function activiti_bpmn_submission_function($form) {
  

  dsm("hello");
  dsm($form);


  $filepath = drupal_realpath($form['activiti_diagramfile']['und'][0]['#file']->uri);
  //$file_contents = file_get_contents($filepath);

  $xml = simplexml_load_file($filepath);

dsm($xml);

dsm("1" . $xml->getName());

foreach($xml->children() as $child) {
  dsm("2" . $child->getName() . ": " . $child . "<br>");

  foreach($child->children() as $grandchild) {
    dsm("3" . $grandchild->getName() . ": " . $grandchild . "<br>");

    foreach($grandchild->children() as $greatgrandchild) {
        dsm("4" . $greatgrandchild->getName() . ": " . $greatgrandchild . "<br>");
        foreach($greatgrandchild->children() as $greatgreatgrandchild) {
          dsm("5" . $greatgreatgrandchild->getName() . ": " . $greatgreatgrandchild . "<br>");
        }
      }
    }
  }

}



























